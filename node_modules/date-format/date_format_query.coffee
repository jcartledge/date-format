json = require "json-parse"
path = require "path"
DateFormatChar = require path.resolve(__dirname, "date_format_char")

class DateFormatQuery
  constructor: (@lang = "php") ->
    json_path = path.resolve __dirname, "data", @lang, "format_characters.json"
    @format_chars = (json.sync json_path).map (raw_char) ->
      new DateFormatChar raw_char

  matches: (str) ->
    matches = {}
    for format_char in @format_chars
      if match = format_char.match str
        (matches[match.index] ?= []).push
          char: format_char.char
          type: format_char.type
          start: match.index
          match: match[0]
    matches[key] for key in Object.keys matches

  suggestions: (str) ->
    (@raw_suggestions str).filter @_suggestion_filter

  raw_suggestions: (str) ->
    (match for match in @matches str).reduce @_cartesian, [[]]

  _cartesian: (a, b) ->
    ret = []
    ret.push _a.concat _b for _a in a for _b in b
    ret

  _suggestion_filter: (suggestion) ->
      keys = {}
      _filter = (char) -> keys[char.type] = yes unless keys[char.type]?
      (suggestion.filter _filter).length is suggestion.length

module.exports = DateFormatQuery
